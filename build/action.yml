---
name: "Build Docker Image"
description: "Build Docker image for arbitrary revision/branch/tag and push to registry"

inputs:
  tag:
    description: Revision, tag, or branch to build
    required: true
  image:
    description: >-
      Image to build, e.g. ghcr.io/organization/image.
    required: true
  registry:
    description: >-
      Registry that hosts these images; by default, ghcr.io.
    default: ghcr.io
  registry_username:
    description: >-
      Username for logging in to registry. For GHCR (and by default), set to github.actor.
    default: ${{ github.actor }}
  registry_token:
    description: >-
      Token for logging in to registry. For GHCR, use secrets.GITHUB_TOKEN.
    required: true
  build-args:
    description: >-
      Arguments to pass to docker build
    required: false
  dockerfile:
    description: >-
      Which file to use to build the image; by default, Dockerfile
    default: Dockerfile
  push_latest:
    description: >-
      Update 'latest' tag when pushing
    default: false

runs:
  using: composite
  steps:
    - name: Clone latest repository
      uses: actions/checkout@v3

    - name: Find commit for tag
      id: tag_check
      uses: hathitrust/github_actions/validate-tag@v1
      with:
        tag: ${{ inputs.tag }}

    - name: Log into container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_token }}

    - name: Check if revision exists in container registry
      id: image_check
      shell: bash
      run: |
        echo Checking whether Docker image "$IMAGE":"$TAG" exists
        if docker manifest inspect "$IMAGE":"$TAG" > /dev/null; then
          echo '::set-output name=image_exists::true'
          echo "image exists!"
        else
          echo "image doesn't exist; Starting to Build and push image"
        fi
      env:
        IMAGE: ${{ inputs.image }}
        TAG: ${{ steps.tag_check.outputs.tag }}

    - name: Check whether to push latest tag
      if: ${{ steps.image_check.outputs.image_exists != 'true' }}
      id: latest_push
      uses: actions/github-script@v6
      env:
        INPUT_PUSH_LATEST: ${{ inputs.push_latest }}
        INPUT_IMAGE: ${{ inputs.image }}
      with:
        script: |
          if ( core.getInput('push_latest') == 'true' ) {
            core.setOutput('latest_tag',core.getInput('image') + ':latest')
          } else {
            core.setOutput('latest_tag','')
          }

    - name: Check out at given revision
      if: ${{ steps.image_check.outputs.image_exists != 'true' }}
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.tag }}

    - name: Build image and push to GHCR
      if: ${{ steps.image_check.outputs.image_exists != 'true' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ inputs.image }}:${{ inputs.tag }}
          ${{ inputs.image }}:${{ steps.tag_check.outputs.tag }}
          ${{ steps.latest_push.outputs.latest_tag }}
        file: ${{ inputs.dockerfile }}
        build-args: ${{ inputs.build-args }}
